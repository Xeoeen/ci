#!/usr/bin/env bash

CI_RED="1;31"
CI_GREEN="1;32"

CI_CPP_COMPILER="c++"
CI_CPP_STANDARD="-std=c++14"
CI_CPP_WARNINGS="-Wall -Wextra"
CI_CPP_DEBUG="-g -D_GLIBCXX_DEBUG"
CI_CPP_OPTIMISE="-O2 -static -lm"

function ci-ansi-col-escape {
	ARG_VALUES=$1
	echo "\033["$ARG_VALUES"m"
}
function ci-ansi-col-reset {
	echo "\033[0m"
}
function ci-colored {
	ARG_COLOR=$1
	ARG_TEXT=$2
	printf "$(ci-ansi-col-escape $ARG_COLOR)$ARG_TEXT$(ci-ansi-col-reset)"
}

function ci-strip-cpp-ext {
	ARG=$1
	echo $(sed -r 's/\.cpp$//g' <<< $ARG)
}
function ci-build {
	ARG_SOURCE=$1
	$CI_CPP_COMPILER $CI_CPP_STANDARD $CI_CPP_WARNINGS $CI_CPP_DEBUG $ARG_SOURCE -o $(ci-strip-cpp-ext $ARG_SOURCE).e
}

function ci-check-test {
	ARG_NAME=$1
	ARG_EXE1=$2
	ARG_EXE2=$3
	ARG_TEST_STR=$4
	OUTPUT1=$($ARG_EXE1 <<< $ARG_TEST_STR)
	OUTPUT2=$($ARG_EXE2 <<< $ARG_TEST_STR)
	diff -bew <(echo $OUTPUT1) <(echo $OUTPUT2) &> /dev/null
	DIFF_RESULT=$?
	if [ $DIFF_RESULT -eq 0 ] ; then
		ci-colored $CI_GREEN 'TEST RUN SUCCESS'
	else
		ci-colored $CI_RED 'TEST RUN FAILURE'
	fi
	echo " "$ARG_NAME
	return $DIFF_RESULT
}

function ci-autotest {
	ARG_EXE1=$1
	ARG_EXE2=$2
	ARG_GEN=$3
	I=1
	while true ; do
		TEST_STRING=$($ARG_GEN)
		ci-check-test "(autogenerated $I)" "$ARG_EXE1" "$ARG_EXE2" "$TEST_STRING"
		if [ $? -ne 0 ] ; then
			echo "$TEST_STRING"
			break
		fi
		let "I += 1"
	done
}

CI_SUBCMD=$1
shift
ci-$CI_SUBCMD "$@"
